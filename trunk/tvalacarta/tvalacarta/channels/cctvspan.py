# -*- coding: utf-8 -*-#------------------------------------------------------------# tvalacarta - XBMC Plugin# Canal para CCTV# creado por rsantaella# http://blog.tvalacarta.info/plugin-xbmc/tvalacarta/#------------------------------------------------------------import urlparse,urllib2,urllib,reimport os, sysfrom core import loggerfrom core import configfrom core import scrapertoolsfrom core.item import Itemfrom servers import servertools__channel__ = "cctvspan"__category__ = "F"__type__ = "generic"__title__ = "cctvspan"__language__ = "ES"__creationdate__ = "20121130"__vfanart__ = "http://espanol.cntv.cn/library/column/2010/11/24/C28600/style/img/map2.jpg"DEBUG = config.get_setting("debug")def isGeneric():    return Truedef mainlist(item):    logger.info("tvalacarta.cctvspan mainlist")    itemlist = []    itemlist.append( Item(channel=__channel__, title="China", action="videos_seccion", url="http://espanol.cntv.cn/video/china/index.shtml", fanart = __vfanart__))     itemlist.append( Item(channel=__channel__, title="Mundo", action="videos_seccion", url="http://espanol.cntv.cn/video/internacional/index.shtml", fanart = __vfanart__))     itemlist.append( Item(channel=__channel__, title="Economia", action="videos_seccion", url="http://espanol.cntv.cn/video/economia/index.shtml", fanart = __vfanart__))     itemlist.append( Item(channel=__channel__, title="Cultura", action="videos_seccion", url="http://espanol.cntv.cn/video/cultura/index.shtml", fanart = __vfanart__))     itemlist.append( Item(channel=__channel__, title="Deportes", action="videos_seccion", url="http://espanol.cntv.cn/video/deporte/index.shtml", fanart = __vfanart__))     itemlist.append( Item(channel=__channel__, title="Otros programas", action="programas", fanart = __vfanart__))     return itemlistdef programas(item):    logger.info("tvalacarta.cctvspan programas")    itemlist = []    itemlist.append( Item(channel=__channel__, title="Arte Culinario Chino", action="videos", url="http://cctv.cntv.cn/lm/ArteCulinarioChino/video/index.shtml", thumbnail="http://p4.img.cctvpic.com/nettv/cctv/lm/ArteCulinarioChino/20121128/images/112511_1354093570266.jpg", fanart = __vfanart__))     itemlist.append( Item(channel=__channel__, title="Mundo Insólito", action="videos", url="http://cctv.cntv.cn/lm/MundoInsolito/video/index.shtml", thumbnail="http://p3.img.cctvpic.com/nettv/cctv/lm/MundoInsolito/20121128/images/111805_1354091216387.jpg", fanart = __vfanart__))    itemlist.append( Item(channel=__channel__, title="Puntos de Vista", action="videos", url="http://cctv.cntv.cn/lm/PuntosdeVista/video/index.shtml", thumbnail="http://p4.img.cctvpic.com/nettv/xiyu/program/lanmeishidian/20110711/images/106127_1310370853022.jpg", fanart = __vfanart__))     itemlist.append( Item(channel=__channel__, title="Aprendiendo Chino", action="videos", url="http://cctv.cntv.cn/lm/ViajandoyAprendiendoChino/video/index.shtml", thumbnail="http://p4.img.cctvpic.com/nettv/cctv/lm/ViajandoyAprendiendoChino/20120302/images/101146_1330653020151.jpg", fanart = __vfanart__))    itemlist.append( Item(channel=__channel__, title="Así es China", action="videos", url="http://cctv.cntv.cn/lm/AsiesChina/video/index.shtml", thumbnail="http://p4.img.cctvpic.com/nettv/cctv/lm/AsiesChina/20121128/images/112181_1354091418296.jpg", fanart = __vfanart__))    itemlist.append( Item(channel=__channel__, title="Documental", action="videos", url="http://cctv.cntv.cn/lm/Documental/video/index.shtml", thumbnail="http://p2.img.cctvpic.com/nettv/cctv/lm/Documental/20121128/images/112456_1354093093102.jpg", fanart = __vfanart__))    itemlist.append( Item(channel=__channel__, title="Recorriendo China", action="videos", url="http://cctv.cntv.cn/lm/RecorriendoChina/video/index.shtml", thumbnail="http://p4.img.cctvpic.com/nettv/cctv/lm/RecorriendoChina/20121128/images/112475_1354093309250.jpg", fanart = __vfanart__))    itemlist.append( Item(channel=__channel__, title="Ronda Artística", action="videos", url="http://cctv.cntv.cn/lm/RondaArtistica/video/index.shtml", thumbnail="http://p3.img.cctvpic.com/nettv/cctv/lm/RondaArtistica/20121128/images/112527_1354093750845.jpg", fanart = __vfanart__))    itemlist.append( Item(channel=__channel__, title="Telenovela", action="videos", url="http://cctv.cntv.cn/lm/Telenovela/video/index.shtml", thumbnail="http://p3.img.cctvpic.com/nettv/cctv/lm/Telenovela/20121128/images/111776_1354091088259.jpg", fanart = __vfanart__))     return itemlistdef videos_seccion(item):    logger.info("tvalacarta.cctvspan videos_seccion")            # Descarga la pȧina    itemlist = []    data = scrapertools.cachePage(item.url)        '''    <li>    <div class="image"><a href="http://espanol.cntv.cn/program/Noticiario/20131218/101717.shtml" target="_blank"><img src="http://p1.img.cctvpic.com/program/Noticiario/20131218/images/1387353733493_1387353733493_r.jpg" width="128" height="96" /></a></div>    <div class="text">    <a href="http://espanol.cntv.cn/program/Noticiario/20131218/101717.shtml" target="_blank">Organizan actos de carácter navide&ntilde;o en Suramérica </a>    </div>    </li>    '''    patron  = '<li[^<]+'    patron += '<div class="image"><a href="([^"]+)"[^<]+<img src="([^"]+)"[^<]+</a></div[^<]+'    patron += '<div class="text"[^<]+'    patron += '<a href="[^"]+" target="_blank">([^<]+)<'    matches = re.compile(patron,re.DOTALL).findall(data)    for scrapedurl,scrapedthumbnail,scrapedtitle in matches:        title = scrapertools.htmlclean(scrapedtitle)        url = urlparse.urljoin(item.url,scrapedurl)        thumbnail = urlparse.urljoin(item.url,scrapedthumbnail)        plot = ""        itemlist.append( Item(channel=__channel__, action="play", title=title , url=url , thumbnail=thumbnail, plot=plot, folder=True) )    return itemlistdef videos(item):    logger.info("tvalacarta.cctvspan videos")        # Descarga la pȧina    data = scrapertools.cachePage(item.url)    patron = '=new title_array_01\(\'(.*?)\',\'(.*?)\'\);'    matches = re.compile(patron,re.DOTALL).findall(data)    if DEBUG: scrapertools.printMatches(matches)        itemlist = []    for match in matches:        scrapedtitle = scrapertools.htmlclean(match[0])        scrapedurl   = match[1]        itemlist.append( Item(channel=__channel__, action="play", title=scrapedtitle , url=scrapedurl ,  folder=True) )    return itemlistdef play(item):    logger.info("tvalacarta.cctvspan play")            data = scrapertools.cachePage(item.url)	    logger.info(data)    video_id = scrapertools.find_single_match(data,'videoCenterId=([a-z0-9]+)')    # Formato noticias    if video_id!="":        metadata_url = "http://vdn.apps.cntv.cn/api/getHttpVideoInfo.do?pid="+video_id+"&tz=-1&from=000spanish&url="+item.url+"&idl=32&idlr=32&modifyed=false"        data = scrapertools.cache_page(metadata_url)        logger.info(data)            video_url = scrapertools.find_single_match(data,'"hls_url"\:"([^"]+)"')        logger.info("video_url="+video_url)        #video_url = "http://hotasp.v.cntv.cn/asp/hls/main/0303000a/3/default/4edd50ad53cb4cbdb858588617217035/main.m3u8"        #video_url = "http://hotasp.v.cntv.cn/asp/hls/main/0303000a/3/default/4edd50ad53cb4cbdb858588617217035/850.m3u8"        #video_url = "http://hotasp.v.cntv.cn/asp/hls/850/0303000a/3/default/4edd50ad53cb4cbdb858588617217035/850.m3u8"        #http://hotasp.v.cntv.cn/asp/hls/main/0303000a/3/default/75e9b6a6feed4a2799ad660f56481155/main.m3u8        #http://hotasp.v.cntv.cn/asp/hls/850/0303000a/3/default/75e9b6a6feed4a2799ad660f56481155/850.m3u8        video_url = video_url.replace("main","850")        logger.info("video_url="+video_url)        # Formato programas    else:        video_id = scrapertools.find_single_match(data,'"videoCenterId","(.*?)"')        video_url = "http://asp.v.cntv.cn/hls/"+matches[0]+"/main.m3u8"		    itemlist = []    itemlist.append( Item(channel=__channel__, action="play", server="directo", title="Ver el vídeo" , url=video_url ,  folder=False) )    return itemlist# Verificación automática de canales: Esta función debe devolver "True" si todo está ok en el canal.def test():    bien = True        # El canal tiene estructura programas -> episodios -> play    items_programas = mainlist(Item())    if len(items_programas)==0:        return False    items_episodios = videos(items_programas[0])    if len(items_episodios)==0:        return False    items_videos = play(items_episodios[0])    if len(items_videos)==0:        return False    return bien