<?xml version='1.0' encoding="iso-8859-15" ?>
<rss version="2.0">

<!--
#   CABECERA_FUENTES_TRANSLATE.RSS
-->

<script> 
   itemCount = getPageInfo("itemCount");
   if( itemCount == 1 )
   {
      setRefreshTime(500);
      setFocusItemIndex(0);
      postMessage("enter");
   }
</script> 
<onEnter>
	translate_base_url  = "http://127.0.0.1/cgi-bin/translate?";
	screenXp = 16;
	screenYp = 9;
	rssconf = readStringFromFile(getStoragePath("key")+"translate.dat");
	print("rssconf:",rssconf);
	if(rssconf != null)
	{
		value = getStringArrayAt(rssconf, 0);
		if(value != null &amp;&amp; value != "")
			translate_base_url = value;
		value = getStringArrayAt(rssconf, 1);
		if(value != null &amp;&amp; value != "")
			screenXp = Integer(value);
		value = getStringArrayAt(rssconf, 2);
		if(value != null &amp;&amp; value != "")
			screenYp = Integer(value);
	}
	print("rssconf:",translate_base_url,screenXp,screenYp);
	
	storagePath             = getStoragePath("tmp");
	storagePath_stream      = storagePath + "stream.dat";
	storagePath_playlist    = storagePath + "playlist.dat";
    
	error_info          = "";
	itemCount = getPageInfo("itemCount");
</onEnter>

<mediaDisplay name="onePartView"
	sideLeftWidthPC="0"
	sideRightWidthPC="0"
	
	headerImageWidthPC="0"
	selectMenuOnRight="no"
	autoSelectMenu="no"
	autoSelectItem="no"
	itemImageHeightPC="0"
	itemImageWidthPC="0"
	itemXPC="4"
	itemYPC="25"
	itemWidthPC="48"
	itemHeightPC="8"
	capXPC="8"
	capYPC="25"
	capWidthPC="48"
	capHeightPC="64"
	itemBackgroundColor="56:70:102"
	itemGap="2"
	bottomYPC="90"
	backgroundColor="28:35:51"
	showHeader="no"
	sliding="yes"
	imageFocus=""
	imageUnFocus=""
	imageParentFocus=""
	itemPerPage="5"
	showDefaultInfo="no"
	infoYPC="90"
>
		
     <image offsetXPC=23 offsetYPC=3.5 widthPC=54 heightPC=9>image/bg-column-item.png</image> <!--  infobar.png</image> -->
     <image offsetXPC=82 offsetYPC=2 widthPC=15 heightPC=15>image/pelisalacartalogo.png</image>
     <image offsetXPC=4 offsetYPC=2 widthPC=15 heightPC=15><script>"/opt/pelisalacarta/resources/images/posters/"+getPageInfo("pageTitle")+".png";</script></image>
     <image offsetXPC=68 offsetYPC=20 widthPC=30 heightPC=70>
         <script>idx = getQueryItemIndex(); getItemInfo(idx, "image");</script>
     </image>
     <text align="center" redraw="yes" offsetXPC=20 offsetYPC=5 widthPC=60 heightPC=6 fontSize=20 backgroundColor="-1:-1:-1" foregroundColor="200:200:200">
       <script>idx = getQueryItemIndex(); getItemInfo(idx, "title");</script>
     </text>

	<text align="left" redraw="yes" offsetXPC=0 offsetYPC=90 widthPC=100 heightPC=10 fontSize=13 backgroundColor="28:35:51" foregroundColor="240:240:240">
		<script>print(location); location;</script>
	</text>

	<text align="left" redraw="yes" offsetXPC=10 offsetYPC=82 widthPC=80 heightPC=8 fontSize=13 backgroundColor="-1:-1:-1" foregroundColor="200:80:80">
		<script>if(streamurl==""||streamurl==null) "WARNING! No stream url."; else "";</script>
	</text>

	<idleImage idleImageYPC="45" idleImageHeightPC="10">../etc/translate/rss/image/POPUP_LOADING_01.png<idleImageWidthPC><script>10 * screenYp / screenXp;</script></idleImageWidthPC><idleImageXPC><script>45 + 10 * (1 - screenYp / screenXp) / 2;</script></idleImageXPC></idleImage>
	<idleImage idleImageYPC="45" idleImageHeightPC="10">../etc/translate/rss/image/POPUP_LOADING_02.png<idleImageWidthPC><script>10 * screenYp / screenXp;</script></idleImageWidthPC><idleImageXPC><script>45 + 10 * (1 - screenYp / screenXp) / 2;</script></idleImageXPC></idleImage>
	<idleImage idleImageYPC="45" idleImageHeightPC="10">../etc/translate/rss/image/POPUP_LOADING_03.png<idleImageWidthPC><script>10 * screenYp / screenXp;</script></idleImageWidthPC><idleImageXPC><script>45 + 10 * (1 - screenYp / screenXp) / 2;</script></idleImageXPC></idleImage>
	<idleImage idleImageYPC="45" idleImageHeightPC="10">../etc/translate/rss/image/POPUP_LOADING_04.png<idleImageWidthPC><script>10 * screenYp / screenXp;</script></idleImageWidthPC><idleImageXPC><script>45 + 10 * (1 - screenYp / screenXp) / 2;</script></idleImageXPC></idleImage>
	<idleImage idleImageYPC="45" idleImageHeightPC="10">../etc/translate/rss/image/POPUP_LOADING_05.png<idleImageWidthPC><script>10 * screenYp / screenXp;</script></idleImageWidthPC><idleImageXPC><script>45 + 10 * (1 - screenYp / screenXp) / 2;</script></idleImageXPC></idleImage>
	<idleImage idleImageYPC="45" idleImageHeightPC="10">../etc/translate/rss/image/POPUP_LOADING_06.png<idleImageWidthPC><script>10 * screenYp / screenXp;</script></idleImageWidthPC><idleImageXPC><script>45 + 10 * (1 - screenYp / screenXp) / 2;</script></idleImageXPC></idleImage>
	<idleImage idleImageYPC="45" idleImageHeightPC="10">../etc/translate/rss/image/POPUP_LOADING_07.png<idleImageWidthPC><script>10 * screenYp / screenXp;</script></idleImageWidthPC><idleImageXPC><script>45 + 10 * (1 - screenYp / screenXp) / 2;</script></idleImageXPC></idleImage>
	<idleImage idleImageYPC="45" idleImageHeightPC="10">../etc/translate/rss/image/POPUP_LOADING_08.png<idleImageWidthPC><script>10 * screenYp / screenXp;</script></idleImageWidthPC><idleImageXPC><script>45 + 10 * (1 - screenYp / screenXp) / 2;</script></idleImageXPC></idleImage>
	<itemDisplay>
		<text align="left" lines="1" offsetXPC=0 offsetYPC=10 widthPC=100 heightPC=80 backgroundColor="-1:-1:-1" >
			<script>
				idx = getQueryItemIndex();
				focus = getFocusItemIndex();
				if(focus==idx) 
				{
					location = getItemInfo(idx, "location");
					streamurl = getItemInfo(idx, "stream_url");
				}
				getItemInfo(idx, "fulltitle");
			</script>
			<fontSize><script>if(focus==idx) "15"; else "13";</script></fontSize>
		  	<backgroundColor><script>if(focus==idx) "84:105:153"; else "-1:-1:-1";</script></backgroundColor>
		  	<foregroundColor><script>if(focus==idx) "255:255:255"; else "180:180:180";</script></foregroundColor>
		</text>
		
	</itemDisplay>
		
	<onUserInput>
		<script>
			ret = "false";
			userInput = currentUserInput();
			majorContext = getPageInfo("majorContext");
      
			print("*** majorContext=",majorContext);
			print("*** userInput=",userInput);
      
			if(userInput == "enter" || userInput == "ENTR")
			{
			     executeScript("defaultDispatcher");
			}
			else if(userInput == "right" || userInput == "R") 
			{
				ret = "true";
			}
          
			ret;
		</script>
	</onUserInput>
</mediaDisplay>
	
#==========================================================
# ITEM_TEMPLATE
#---------------------------------------------------------- 
<item_template>
	<mediaDisplay  name="threePartsView">
		<idleImage idleImageYPC="45" idleImageHeightPC="10">../etc/translate/rss/image/POPUP_LOADING_01.png<idleImageWidthPC><script>10 * screenYp / screenXp;</script></idleImageWidthPC><idleImageXPC><script>45 + 10 * (1 - screenYp / screenXp) / 2;</script></idleImageXPC></idleImage>
		<idleImage idleImageYPC="45" idleImageHeightPC="10">../etc/translate/rss/image/POPUP_LOADING_02.png<idleImageWidthPC><script>10 * screenYp / screenXp;</script></idleImageWidthPC><idleImageXPC><script>45 + 10 * (1 - screenYp / screenXp) / 2;</script></idleImageXPC></idleImage>
    		<idleImage idleImageYPC="45" idleImageHeightPC="10">../etc/translate/rss/image/POPUP_LOADING_03.png<idleImageWidthPC><script>10 * screenYp / screenXp;</script></idleImageWidthPC><idleImageXPC><script>45 + 10 * (1 - screenYp / screenXp) / 2;</script></idleImageXPC></idleImage>
		<idleImage idleImageYPC="45" idleImageHeightPC="10">../etc/translate/rss/image/POPUP_LOADING_04.png<idleImageWidthPC><script>10 * screenYp / screenXp;</script></idleImageWidthPC><idleImageXPC><script>45 + 10 * (1 - screenYp / screenXp) / 2;</script></idleImageXPC></idleImage>
		<idleImage idleImageYPC="45" idleImageHeightPC="10">../etc/translate/rss/image/POPUP_LOADING_05.png<idleImageWidthPC><script>10 * screenYp / screenXp;</script></idleImageWidthPC><idleImageXPC><script>45 + 10 * (1 - screenYp / screenXp) / 2;</script></idleImageXPC></idleImage>
		<idleImage idleImageYPC="45" idleImageHeightPC="10">../etc/translate/rss/image/POPUP_LOADING_06.png<idleImageWidthPC><script>10 * screenYp / screenXp;</script></idleImageWidthPC><idleImageXPC><script>45 + 10 * (1 - screenYp / screenXp) / 2;</script></idleImageXPC></idleImage>
		<idleImage idleImageYPC="45" idleImageHeightPC="10">../etc/translate/rss/image/POPUP_LOADING_07.png<idleImageWidthPC><script>10 * screenYp / screenXp;</script></idleImageWidthPC><idleImageXPC><script>45 + 10 * (1 - screenYp / screenXp) / 2;</script></idleImageXPC></idleImage>
		<idleImage idleImageYPC="45" idleImageHeightPC="10">../etc/translate/rss/image/POPUP_LOADING_08.png<idleImageWidthPC><script>10 * screenYp / screenXp;</script></idleImageWidthPC><idleImageXPC><script>45 + 10 * (1 - screenYp / screenXp) / 2;</script></idleImageXPC></idleImage>
	</mediaDisplay>
</item_template>

<defaultDispatcher>
				showIdle();
				focus = getFocusItemIndex();

				request_title = getItemInfo(focus, "title");
				request_url = getItemInfo(focus, "location");
				request_options = getItemInfo(focus, "options");
				request_image = getItemInfo(focus, "image");

				stream_url = getItemInfo(focus, "stream_url");
				stream_title = getItemInfo(focus, "stream_title");
				stream_type = getItemInfo(focus, "stream_type");
				stream_protocol = getItemInfo(focus, "stream_protocol");
				stream_soft = getItemInfo(focus, "stream_soft");
				stream_class = getItemInfo(focus, "stream_class");
				stream_server = getItemInfo(focus, "stream_server");
				stream_status_url = "";
				stream_current_song = "";
				stream_genre = getItemInfo(focus, "stream_genre");
				stream_bitrate = getItemInfo(focus, "stream_bitrate");
				playlist_autoplay = getItemInfo(focus, "autoplay");

				if(playlist_autoplay == "" || playlist_autoplay == null)
					playlist_autoplay = 1;
        
				if(stream_class == "" || stream_class == null)
					stream_class = "unknown";

				if(stream_url == "" || stream_url == null)
					stream_url = request_url;

				if(stream_server != "" &amp;&amp; stream_server != null)
					stream_status_url = translate_base_url + "status," + urlEncode(stream_server) + "," + urlEncode(stream_url);

				if(stream_title == "" || stream_title == null)
					stream_title = request_title;

				
				print("****************************************************");
				print("request_title = ",request_title);
				print("request_url = ",request_url);
				print("request_options = ",request_options);
				print("request_image = ",request_image);

				print("stream_url = ",stream_url);
				print("stream_title = ",stream_title);
				print("stream_type = ",stream_type);
				print("stream_protocol = ",stream_protocol);
				print("stream_soft = ",stream_soft);
				print("stream_class = ",stream_class);
				print("stream_server = ",stream_server);
				print("stream_status_url = ",stream_status_url);
				print("stream_current_song = ",stream_current_song);
				print("stream_genre = ",stream_genre);
				print("stream_bitrate = ",stream_bitrate);
				print("playlist_autoplay = ",playlist_autoplay);
				
				if(stream_url != "" &amp;&amp; stream_url != null)
				{
					print("Aqui 1");
					if(stream_protocol == "file" || (stream_protocol == "http" &amp;&amp; stream_soft != "shoutcast"))
					{
						url = stream_url;
						print("Aqui 2 url=",url);
					}
					else
					{
						if(stream_type != null &amp;&amp; stream_type != "")
						{
							request_options = "Content-type:"+stream_type+";"+request_options;
							print("Aqui 3 request_options = ", request_options);
						}
						url = translate_base_url + "stream," + request_options + "," + urlEncode(stream_url);
						print("Aqui 4, url = ", url);
					}
                         print("Aqui 5, ejecuto ",stream_class+"Distpacher");
					executeScript(stream_class+"Dispatcher");
				}
        
				print("Aqui 6");
				cancelIdle();
				ret = "true";
</defaultDispatcher>


#==========================================================
# VIDEO DISPATCHER
#---------------------------------------------------------- 
<videoDispatcher>
	streamArray = null;
	streamArray = pushBackStringArray(streamArray, request_url);
	streamArray = pushBackStringArray(streamArray, request_options);
	streamArray = pushBackStringArray(streamArray, stream_url);
	streamArray = pushBackStringArray(streamArray, url);
	streamArray = pushBackStringArray(streamArray, stream_type);
	streamArray = pushBackStringArray(streamArray, stream_title);
	streamArray = pushBackStringArray(streamArray, "1");
	writeStringToFile(storagePath_stream, streamArray);
	doModalRss("rss_file://../etc/translate/rss/xspf/videoRenderer.rss");
</videoDispatcher>
  
#==========================================================
# AUDIO DISPATCHER
#---------------------------------------------------------- 
<audioDispatcher>
	streamArray = null;
	streamArray = pushBackStringArray(streamArray, request_url);
	streamArray = pushBackStringArray(streamArray, request_options);
	streamArray = pushBackStringArray(streamArray, stream_url);
	streamArray = pushBackStringArray(streamArray, url);
	streamArray = pushBackStringArray(streamArray, stream_type);
	streamArray = pushBackStringArray(streamArray, stream_status_url);
	streamArray = pushBackStringArray(streamArray, stream_current_song);
	streamArray = pushBackStringArray(streamArray, stream_genre);
	streamArray = pushBackStringArray(streamArray, stream_bitrate);
	streamArray = pushBackStringArray(streamArray, stream_title);
	streamArray = pushBackStringArray(streamArray, request_image);
	streamArray = pushBackStringArray(streamArray, "1");
	writeStringToFile(storagePath_stream, streamArray);
	doModalRss("rss_file://../etc/translate/rss/xspf/audioRenderer.rss");
</audioDispatcher>
  
#==========================================================
# PLAYLIST DISPATCHER
#---------------------------------------------------------- 
<playlistDispatcher>
	streamArray = null;
	streamArray = pushBackStringArray(streamArray, stream_url);
	streamArray = pushBackStringArray(streamArray, stream_url);
	streamArray = pushBackStringArray(streamArray, "");
	streamArray = pushBackStringArray(streamArray, "");
	streamArray = pushBackStringArray(streamArray, "playlist");
	streamArray = pushBackStringArray(streamArray, playlist_autoplay);
	writeStringToFile(storagePath_playlist, streamArray);
	doModalRss("rss_file://../etc/translate/rss/xspf/xspfBrowser.rss");
</playlistDispatcher>
  
#==========================================================
# RSS DISPATCHER
#---------------------------------------------------------- 
<rssDispatcher>
	streamArray = null;
	streamArray = pushBackStringArray(streamArray, stream_url);
	streamArray = pushBackStringArray(streamArray, stream_url);
	streamArray = pushBackStringArray(streamArray, "");
	streamArray = pushBackStringArray(streamArray, "");
	writeStringToFile(storagePath_stream, streamArray);
	doModalRss("rss_file://../etc/translate/rss/xspf/rss_mediaFeed.rss");
</rssDispatcher>

#==========================================================
# UNKNOWN DISPATCHER
#---------------------------------------------------------- 
<unknownDispatcher>
	info_url    = translate_base_url + "info," + request_options + "," + urlEncode(request_url);
	error_info  = "";

	res = loadXMLFile(info_url);
    
	if (res != null)
	{
		print("Aqui 7");
		error = getXMLElementCount("info","error");
      
		if(error != 0)
		{
			value = getXMLText("info","error");
			if(value != null)
			{
				error_info = value;
			}
		}
		else
		{
			value = getXMLAttribute("info","stream","url");
			if(value != null)
				stream_url = value;
  
			value = getXMLAttribute("info","stream","type");
			if(value != null)
				stream_type = value;
  	    
			value = getXMLAttribute("info","stream","class");
			if(value != null)
				stream_class = value;
  
			value = getXMLAttribute("info","stream","protocol");
			if(value != null)
				stream_protocol = value;
  
			value = getXMLAttribute("info","stream","server");
			if(value != null)
				stream_soft = value;
  
			stream_status_url = "";
        
			value = getXMLAttribute("info","stream","server_url");
			if(value != null)
			{
				stream_server_url = value;
				if((stream_soft == "icecast" || stream_soft == "shoutcast") &amp;&amp; stream_server_url!="")
				{
					stream_status_url = translate_base_url+"status,"+urlEncode(stream_server_url)+","+urlEncode(stream_url);
				}
			}
  	     
			value = getXMLText("info","status","stream-title");
			if(value != null)
				stream_title = value;
  
			stream_current_song = "";
			value = getXMLText("info","status","current-song");
			if(value != null)
				stream_current_song = value;
    		  
			value = getXMLText("info","status","stream-genre");
			if(value != null)
				stream_genre = value;
        
			value = getXMLText("info","status","stream-bitrate");
			if(value != null)
				stream_bitrate = value;
  
			options = "";
        
			if(stream_type != "")
				options = "Content-type:"+stream_type;
        
			if(options == "")
				options = stream_options;
			else
				options = options + ";" + stream_options;
  
			stream_translate_url = translate_base_url + "stream," + options + "," + urlEncode(stream_url);
  	          print("Aqui 8 stream_translate_url = ", stream_translate_url);
			url = null;
  	    
			if(stream_class == "video" || stream_class == "audio")
			{
				if(stream_protocol == "file" || (stream_protocol == "http" &amp;&amp; stream_soft != "shoutcast"))
					url = stream_url;
				else
					url = stream_translate_url;
				print("Aqui 9 url = ",url);
			}
			else
			{
				url = stream_url;
			}
    	     
			if(url != null)
			{
				if(stream_class == "audio" || stream_class == "video" || stream_class == "playlist" || stream_class == "rss")
				{
					print("Aqui 10, ejecuto ",stream_class+"Dispatcher");
					executeScript(stream_class+"Dispatcher");
				}
				else
				{
					error_info = "Unsupported media type: " + stream_type;
				}
			}
			else
			{
				error_info = "Empty stream url!";
			}
		}
	}
	else
	{
		error_info = "CGI translate module failed!";
	}
	print("error_info=",error_info);
</unknownDispatcher>


