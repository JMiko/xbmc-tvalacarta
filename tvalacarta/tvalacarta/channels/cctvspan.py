# -*- coding: utf-8 -*-#------------------------------------------------------------# tvalacarta - XBMC Plugin# Canal para CCTV# creado por rsantaella# http://blog.tvalacarta.info/plugin-xbmc/tvalacarta/#------------------------------------------------------------import urlparse,urllib2,urllib,reimport os, sysfrom core import loggerfrom core import configfrom core import scrapertoolsfrom core.item import Itemfrom servers import servertools__channel__ = "cctvspan"__category__ = "F"__type__ = "generic"__title__ = "cctvspan"__language__ = "ES"__creationdate__ = "20121130"__vfanart__ = "http://espanol.cntv.cn/library/column/2010/11/24/C28600/style/img/map2.jpg"DEBUG = config.get_setting("debug")def isGeneric():    return Truedef mainlist(item):    logger.info("tvalacarta.cctvspan mainlist")    itemlist = []    itemlist.append( Item(channel=__channel__, title="China", action="videos_seccion", url="http://espanol.cntv.cn/video/china/index.shtml", fanart = __vfanart__))     itemlist.append( Item(channel=__channel__, title="Mundo", action="videos_seccion", url="http://espanol.cntv.cn/video/internacional/index.shtml", fanart = __vfanart__))     itemlist.append( Item(channel=__channel__, title="Economia", action="videos_seccion", url="http://espanol.cntv.cn/video/economia/index.shtml", fanart = __vfanart__))     itemlist.append( Item(channel=__channel__, title="Cultura", action="videos_seccion", url="http://espanol.cntv.cn/video/cultura/index.shtml", fanart = __vfanart__))     itemlist.append( Item(channel=__channel__, title="Deportes", action="videos_seccion", url="http://espanol.cntv.cn/video/deporte/index.shtml", fanart = __vfanart__))     itemlist.append( Item(channel=__channel__, title="Otros programas", action="programas", fanart = __vfanart__))     return itemlistdef programas(item):    logger.info("tvalacarta.cctvspan programas")    itemlist = []    itemlist.append( Item(channel=__channel__, title="Arte Culinario Chino", action="episodios", url="http://cctv.cntv.cn/lm/ArteCulinarioChino/video/index.shtml", thumbnail="http://p4.img.cctvpic.com/nettv/cctv/lm/ArteCulinarioChino/20121128/images/112511_1354093570266.jpg", fanart = __vfanart__))     itemlist.append( Item(channel=__channel__, title="Mundo Insólito", action="episodios", url="http://cctv.cntv.cn/lm/MundoInsolito/video/index.shtml", thumbnail="http://p3.img.cctvpic.com/nettv/cctv/lm/MundoInsolito/20121128/images/111805_1354091216387.jpg", fanart = __vfanart__))    itemlist.append( Item(channel=__channel__, title="Puntos de Vista", action="episodios", url="http://cctv.cntv.cn/lm/PuntosdeVista/video/index.shtml", thumbnail="http://p4.img.cctvpic.com/nettv/xiyu/program/lanmeishidian/20110711/images/106127_1310370853022.jpg", fanart = __vfanart__))     itemlist.append( Item(channel=__channel__, title="Aprendiendo Chino", action="episodios", url="http://cctv.cntv.cn/lm/ViajandoyAprendiendoChino/video/index.shtml", thumbnail="http://p4.img.cctvpic.com/nettv/cctv/lm/ViajandoyAprendiendoChino/20120302/images/101146_1330653020151.jpg", fanart = __vfanart__))    itemlist.append( Item(channel=__channel__, title="Así es China", action="episodios", url="http://cctv.cntv.cn/lm/AsiesChina/video/index.shtml", thumbnail="http://p4.img.cctvpic.com/nettv/cctv/lm/AsiesChina/20121128/images/112181_1354091418296.jpg", fanart = __vfanart__))    itemlist.append( Item(channel=__channel__, title="Documental", action="episodios", url="http://cctv.cntv.cn/lm/Documental/video/index.shtml", thumbnail="http://p2.img.cctvpic.com/nettv/cctv/lm/Documental/20121128/images/112456_1354093093102.jpg", fanart = __vfanart__))    itemlist.append( Item(channel=__channel__, title="Recorriendo China", action="episodios", url="http://cctv.cntv.cn/lm/RecorriendoChina/video/index.shtml", thumbnail="http://p4.img.cctvpic.com/nettv/cctv/lm/RecorriendoChina/20121128/images/112475_1354093309250.jpg", fanart = __vfanart__))    itemlist.append( Item(channel=__channel__, title="Ronda Artística", action="episodios", url="http://cctv.cntv.cn/lm/RondaArtistica/video/index.shtml", thumbnail="http://p3.img.cctvpic.com/nettv/cctv/lm/RondaArtistica/20121128/images/112527_1354093750845.jpg", fanart = __vfanart__))    itemlist.append( Item(channel=__channel__, title="Telenovela", action="episodios", url="http://cctv.cntv.cn/lm/Telenovela/video/index.shtml", thumbnail="http://p3.img.cctvpic.com/nettv/cctv/lm/Telenovela/20121128/images/111776_1354091088259.jpg", fanart = __vfanart__))     return itemlistdef episodios(item):    logger.info("tvalacarta.cctvspan episodios")        # Descarga la pȧina    data = scrapertools.cachePage(item.url)    patron = '=new title_array_01\(\'(.*?)\',\'(.*?)\'\);'    matches = re.compile(patron,re.DOTALL).findall(data)    if DEBUG: scrapertools.printMatches(matches)        itemlist = []    for match in matches:        scrapedtitle = scrapertools.htmlclean(match[0])        scrapedurl   = match[1]        itemlist.append( Item(channel=__channel__, action="play", server="cntv", title=scrapedtitle , url=scrapedurl ,  folder=False) )    return itemlistdef videos_seccion(item):    logger.info("tvalacarta.cctvspan videos_seccion")            # Descarga la pȧina    itemlist = []    data = scrapertools.cachePage(item.url)        '''    <li>    <div class="image"><a href="http://espanol.cntv.cn/program/Noticiario/20131218/101717.shtml" target="_blank"><img src="http://p1.img.cctvpic.com/program/Noticiario/20131218/images/1387353733493_1387353733493_r.jpg" width="128" height="96" /></a></div>    <div class="text">    <a href="http://espanol.cntv.cn/program/Noticiario/20131218/101717.shtml" target="_blank">Organizan actos de carácter navide&ntilde;o en Suramérica </a>    </div>    </li>    '''    patron  = '<li[^<]+'    patron += '<div class="image"><a href="([^"]+)"[^<]+<img src="([^"]+)"[^<]+</a></div[^<]+'    patron += '<div class="text"[^<]+'    patron += '<a href="[^"]+" target="_blank">([^<]+)<'    matches = re.compile(patron,re.DOTALL).findall(data)    for scrapedurl,scrapedthumbnail,scrapedtitle in matches:        title = scrapertools.htmlclean(scrapedtitle)        url = urlparse.urljoin(item.url,scrapedurl)        thumbnail = urlparse.urljoin(item.url,scrapedthumbnail)        plot = ""        itemlist.append( Item(channel=__channel__, action="play", server="cntv", title=title , url=url , thumbnail=thumbnail, plot=plot, folder=False) )    return itemlist# Verificación automática de canales: Esta función debe devolver "True" si todo está ok en el canal.def test():    bien = True        # El canal tiene estructura programas -> episodios -> play    menu_itemlist = mainlist(Item())    items_programas = programas(menu_itemlist[ len(menu_itemlist)-1 ])    if len(items_programas)==0:        print "No hay programas"        return False    items_episodios = episodios(items_programas[0])    if len(items_episodios)==0:        print "No hay episodios en "+items_programas[0].tostring();        return False    from servers import cntv    videos = cntv.get_video_url(items_episodios[0].url)    if len(videos)==0:        print "No hay videos en "+items_episodios[0].tostring();        return False    items_videos = videos_seccion(menu_itemlist[0])    if len(items_videos)==0:        print "No hay videos en "+menu_itemlist[0].tostring();        return False    return bien